#include <Stepper.h>

const int stepsPerRevolution = 400;

const int RmotorPin1 = 51;
const int RmotorPin2 = 41;
const int RmotorPin3 = 50;
const int RmotorPin4 = 53;

const int LmotorPin1 = 29;
const int LmotorPin2 = 26;
const int LmotorPin3 = 27;
const int LmotorPin4 = 28;

// DCモーター(仮)
const int ENA = 9; // PWM
const int IN1 = 3;
const int IN2 = 4;

// 超音波センサー
#define echoPin1 23 // 前方センサー
#define trigPin1 22
#define echoPin2 31 // 後方センサー
#define trigPin2 30

// タイヤ
#define R_DIN0 6 // R 黄黒
#define R_DIN1 7 // R オレンジ白
#define R_DIN2 8 // R 赤白
#define R_VMana 5 // R 紫
#define L_DIN0 2 // L 黄黒
#define L_DIN1 3 // L オレンジ白
#define L_DIN2 4 // L 赤白
#define L_VMana 1 // L 紫

// タッチセンサー
#define touch_sensor_lift 2
#define touch_sensor_front1 3
#define touch_sensor_front2 5 // 修正点

int maximumRange = 300;
int minimumRange = 0;
long duration1, distance1;
long duration2, distance2;
int triger_count1 = 0;
int pw = 255;
bool spinning = false;

int step = 5;

Stepper myStepper1(stepsPerRevolution, RmotorPin1, RmotorPin2, RmotorPin3, RmotorPin4);
Stepper myStepper2(stepsPerRevolution, LmotorPin1, LmotorPin2, LmotorPin3, LmotorPin4);

void setup() {
  myStepper1.setSpeed(60);
  myStepper2.setSpeed(60);
  Serial.begin(9600);

  // 超音波
  pinMode(trigPin1, OUTPUT);
  pinMode(echoPin1, INPUT);
  pinMode(trigPin2, OUTPUT);
  pinMode(echoPin2, INPUT);

  // タイヤ
  pinMode(R_DIN0, OUTPUT);
  pinMode(R_DIN1, OUTPUT);
  pinMode(R_DIN2, OUTPUT);
  pinMode(R_VMana, OUTPUT);
  digitalWrite(R_DIN0, HIGH);
  digitalWrite(R_DIN1, HIGH);
  digitalWrite(R_DIN2, HIGH);

  pinMode(L_DIN0, OUTPUT);
  pinMode(L_DIN1, OUTPUT);
  pinMode(L_DIN2, OUTPUT);
  pinMode(L_VMana, OUTPUT);
  digitalWrite(L_DIN0, HIGH);
  digitalWrite(L_DIN1, HIGH);
  digitalWrite(L_DIN2, LOW);
  delay(5000);

  // DCモーター
  pinMode(IN1, OUTPUT);
  pinMode(IN2, OUTPUT);
  pinMode(ENA, OUTPUT);
}

void loop() {
  if (!spinning) {
    spinning = true;
    digitalWrite(R_DIN0, LOW);
    digitalWrite(R_DIN1, LOW);
    analogWrite(R_VMana, pw);

    digitalWrite(L_DIN0, LOW);
    digitalWrite(L_DIN1, LOW);
    analogWrite(L_VMana, pw);

    Serial.println("SPINNING!");
  }

  if (spinning) {
    // 前方の超音波センサーで距離を測定
    digitalWrite(trigPin1, LOW);
    delayMicroseconds(2);
    digitalWrite(trigPin1, HIGH);
    delayMicroseconds(10);
    digitalWrite(trigPin1, LOW);
    duration1 = pulseIn(echoPin1, HIGH);
    distance1 = duration1 / 58.2;

    digitalWrite(trigPin2, LOW);
    delayMicroseconds(2);
    digitalWrite(trigPin2, HIGH);
    delayMicroseconds(10);
    digitalWrite(trigPin2, LOW);
    duration2 = pulseIn(echoPin2, HIGH);
    distance2 = duration2 / 58.2;
  }

  // タイヤの動作を続ける
  if (distance1 >= 10 && distance1 <= 30) {
    triger_count1++;
    delay(1000);
  } else if (distance1 > 0 && distance1 < 5.0) {
    for (int i = 0; i < 100; i += 4) {
      myStepper1.step(-4);
      delay(5);
      myStepper2.step(-4);
      delay(5);
    }
  }

  if (triger_count1 == 3) {
    digitalWrite(R_DIN0, LOW);
    digitalWrite(R_DIN1, LOW);
    digitalWrite(R_DIN2, LOW);
    analogWrite(R_VMana, 0);

    digitalWrite(L_DIN0, LOW);
    digitalWrite(L_DIN1, LOW);
    digitalWrite(L_DIN2, HIGH);
    analogWrite(L_VMana, 0);

    // ステッピングモーター
    for (int i = 0; i < 100; i += 4) {
      myStepper1.step(4);
      myStepper2.step(4);
    }
    triger_count1 = 0;
    spinning = false;

    for (int i = 0; i <= 100; i += step) {  // PWM制御でモーター回転速度を変える
      analogWrite(ENA, i);
      delay(50);
    }
    analogWrite(ENA, 0);
  }

  // タッチセンサーの状態をチェック
  if (digitalRead(touch_sensor_front1) == LOW || digitalRead(touch_sensor_front2) == LOW) { // 修正点
    digitalWrite(IN1, HIGH);
    digitalWrite(IN2, LOW);
    for (int i = 0; i <= 255; i += step) {
      analogWrite(ENA, i);
      delay(3000);
    }

    digitalWrite(R_DIN0, LOW);
    digitalWrite(R_DIN1, LOW);
    digitalWrite(R_DIN2, HIGH);
    analogWrite(R_VMana, 255);

    digitalWrite(L_DIN0, LOW);
    digitalWrite(L_DIN1, LOW);
    digitalWrite(L_DIN2, LOW);
    analogWrite(L_VMana, 255);
  }

  if (digitalRead(touch_sensor_lift) == LOW) {
    analogWrite(ENA, 0);
    digitalWrite(IN1, LOW);
    digitalWrite(IN2, HIGH);
    for (int i = 0; i <= 255; i += step) {
      analogWrite(ENA, i);
      delay(1000);
    }
  }

  // 前方センサーの距離を表示
  if (distance1 >= maximumRange || distance1 <= minimumRange) {
    Serial.println("-1");
  } else {
    Serial.print("Distance1: ");
    Serial.println(distance1);
  }

  // 後方センサーの距離を表示
  if (distance2 >= maximumRange || distance2 <= minimumRange) {
    Serial.println("-1");
  } else {
    Serial.print("Distance2: ");
    Serial.println(distance2);
  }
}
